// ******
// UI mixins
// ******

@mixin reset-list {
  list-style: none;
  padding: 0;
}

@mixin reset-button {
  overflow: visible;
  margin: 0;
  padding: 0;
  border: 0;
  background: transparent;
  font: inherit;
  line-height: normal;
  color: inherit;
  cursor: pointer;

  &::-moz-focus-inner {
    padding: 0;
    border: 0;
  }
}

@mixin reset-link {
  text-decoration: none;
  color: inherit;
}

@mixin center-content {
  display: flex;
  align-items: center;
  justify-content: center;
}


$breakpoints: (
  sm: 576px,
  md: 768px,
  lg: 1170px,
  xlg: 1440px
);

@mixin media($breakpoint: null, $is-mobile-first: true, $width: null) {
  @if $width {
    $media: if($is-mobile-first,
      'min-width: #{$width}',
      'max-width: #{$width - 1}');

    @media (#{$media}) {
      @content;
    }
  } @else {
    @if not map-has-key($breakpoints, $breakpoint) {
      @error '[media]: #{$breakpoint} is not defined';
    }
    $breakpoint-size: map-get($breakpoints, $breakpoint);
    @if ($breakpoint-size != 0) {
      $media: if($is-mobile-first,
        'min-width: #{$breakpoint-size}',
        'max-width: #{$breakpoint-size - 1}');
      @media (#{$media}) {
        @content;
      }
    } @else {
      @content;
    }
  }
}

@mixin media-up($breakpoint: null, $width: null) {
  @include media($breakpoint, true, $width) {
    @content;
  }
}

@mixin media-down($breakpoint: null, $width: null) {
  @include media($breakpoint, false, $width) {
    @content;
  }
}

@mixin hide-up($breakpoint-name: null, $width: null) {
  @include media-up($breakpoint-name, $width) {
    display: none;
  }
}

@mixin hide-down($breakpoint-name: null, $width: null) {
  @include media-down($breakpoint-name, $width) {
    display: none;
  }
}

@mixin hide-visually {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
}

@mixin main-container {
  max-width: 1128px;
  width: 100%;
  margin: 0 auto;
  padding: 0 24px;
}
